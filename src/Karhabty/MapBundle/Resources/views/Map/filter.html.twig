{% extends ':layout:LayoutUser.html.twig' %}

{% block content%}


	<h2>Localisation des Partenaires avec la Map</h2>
	<div class="row">
	<div class="col-md-12">


		<div class="col-md-6">
		<div class="portlet-body">
			<div id="gmap_basic" class="gmaps">
			</div>


			</div>
		</div>

		<div class="col-md-6">
			<div class="portlet light">
			<h2>Filtre des Partenaires</h2>
			<form>




			<label for="lavage">Lavage</label>
			<input type="checkbox"  data-toggle="toggle" value="lavage" id="lavage"><br>
			<label>Auto-école</label>
			<input type="checkbox"  data-toggle="toggle" value="auto"><br>
			<label>Mécanicien</label>
			<input type="checkbox"  data-toggle="toggle" value="mecanicien"><br>
			<label>Vendeur piéce de rechange</label>
			<input type="checkbox"  data-toggle="toggle" value="vendeur">
			</form>
			</div>
			</div>

		<script type="text/javascript">

            var marker;

            function initMap() {

                var directionsService = new google.maps.DirectionsService;
                var directionsDisplay = new google.maps.DirectionsRenderer({
                suppressMarkers: true

				});


                var map = new google.maps.Map(document.getElementById('gmap_basic'), {
                    zoom: 7,
                    center: {lat: 36.84446074079564, lng: 10.111777782440186}
                });


                var infoBulleCurrentPos = new google.maps.InfoWindow({
                    content: 'Vous etes ici ! '
                });


                var markerPostion = new google.maps.Marker({
                    map: map,
                    title: 'Hello World!',
					icon:"{{ asset('assets/img/marker.png') }}"
                });

                infoBulleCurrentPos.open(map, markerPostion);

                directionsDisplay.setMap(map);


                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function(position) {
                        var pos = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude
                        };

                        markerPostion.setPosition(pos);
                        markerPostion.setMap(map);


						var markers = [];

                        var activities_checked = [];
                        $('input:checkbox').change(
                            function(){
                                if ($(this).is(':checked')) {
                                    if($.inArray($(this).val(), activities_checked)<0)
                                    activities_checked.push($(this).val());
                                }else{
                                    var index = activities_checked.indexOf($(this).val());
                                    activities_checked.splice(index, 1);

								}
							//	console.log("active");

                                markers.forEach(function (item, index) {

                                    item.setMap(null);
                                });
                                markers = [];

                                putmarker();
                            });

						    function putmarker() {

                            var h =[];
                            {%  for off in offres %}
						 	h.push(["{{ off[0] }}","{{ off[1] }}","{{ off[2] }}"]);
							{% endfor %}


                            h.forEach(function (item, index) {


					        	 var geocoder = new google.maps.Geocoder();
					        	 geocoder.geocode({address:item[0] }, function(results, status) {
						         if (status == google.maps.GeocoderStatus.OK) {

						         var myResult = results[0].geometry.location;
									//debug array checked
                                 console.log($.inArray(item[1], activities_checked)>=0);
                                 console.log(activities_checked);
                                 console.log(item[1]);

                                 if($.inArray(item[1], activities_checked)>=0) {


                                  marker = new google.maps.Marker({
								  map: map,
							      position: myResult,
						          icon:"{{ asset('assets/img/part.png') }}"
								  });

                                 markers.push(marker);

                                 map.setCenter(myResult);
                                 marker.setMap(map);
                                 var contenuInfoBulle = item[2];
                                 var infoBulle = new google.maps.InfoWindow({
                                     content: contenuInfoBulle
                                 });

                                 marker.addListener('click', function() {

                                 calculateAndDisplayRoute(directionsService, directionsDisplay,myResult,pos);

                                 infoBulle.open(map, marker);

                             });

						 }}
					 });

                });
	         } //end function putmarker
                        putmarker();


                    }, function() {

                        handleLocationError(true, infoWindow, map.getCenter());

                    });

                } else {
                    // Browser doesn't support Geolocation
                    handleLocationError(false, infoWindow, map.getCenter());
                }


            }



            //handle location error

            function handleLocationError(browserHasGeolocation, infoWindow, pos) {
                infoWindow.setPosition(pos);
                infoWindow.setContent(browserHasGeolocation ?
                    'Error: The Geolocation service failed.' :
                    'Error: Your browser doesn\'t support geolocation.');


            }





            //calcule de la route

            function calculateAndDisplayRoute(directionsService, directionsDisplay,o, e) {
                directionsService.route({
                    origin: o,
                    destination:e,
                    travelMode: google.maps.TravelMode.DRIVING
                }, function(response, status) {
                    if (status === google.maps.DirectionsStatus.OK) {
                        directionsDisplay.setDirections(response);
                    } else {
                        window.alert('Directions request failed due to ' + status);
                    }
                });
            }

		</script>
		<script async defer
				src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAe4BNAZTQY-9JxbRhpgFUNuxjuyeGOZtU&callback=initMap">
		</script>

{% endblock %}